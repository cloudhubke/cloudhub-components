{"version":3,"sources":["webpack:///./src/pages/docs/getting-started/react.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","scope","Block","Button","Text","isMDXComponent"],"mappings":"2RAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAM5E,iCAEA,iLACA,oCACA,gEACA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,6CAIL,mFAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,wEADsD,+BAAlE,+CAEwF,0BAAYA,WAAW,KAAvB,wBAFxF,KAGA,2DAA0C,0BAAYA,WAAW,KAAvB,iBAA1C,aACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6NASL,6EAA4D,+BAAGA,WAAW,KAAQ,CAC9E,KAAQ,mDADgD,oBAA5D,KAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mGAKL,iCACA,0BAAYC,MAAO,CACjBC,UACAC,WACAC,WAHF,+HAeJR,EAAWS,gBAAiB","file":"component---src-pages-docs-getting-started-react-md-a384f791eb4438fcae85.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bernardgaitho/repos/cloudhub-components/cloudhub-components-docs/src/components/docs-layout.js\";\nimport { Block, Button, Text } from 'cloudhub-components';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {\n      /* prettier-ignore */\n    }\n    <h2>{`ReactJs`}</h2>\n\n    <p>{`React-Native components are designed to work with expo. If you are using any other eg react-native-cli to start your project, this may not work for you.`}</p>\n    <h2>{`Installing`}</h2>\n    <p>{`In your expo project, run this command.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`npm install --save cloudhub-components\n`}</code></pre>\n    <p>{`Once expo is installed, make sure to create a theme folder `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cloudhubke/expo-components/tree/master/lib/theme\"\n      }}>{`like the one in the project`}</a>{`. The required configuration parameters are `}<inlineCode parentName=\"p\">{`colors, fonts, sizes`}</inlineCode>{`.`}</p>\n    <p>{`Once done, configure pass theme to `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` context.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { sizes, fonts, colors } from \"./theme\";\nimport ThemeProvider from \"cloudhub-components/dist/theme/ThemeProvider\";\n\n<ThemeProvider fonts={fonts} sizes={sizes} colors={colors}>\n  <App />\n</ThemeProvider>\n`}</code></pre>\n    <p>{`Your project is now ready to use with your theme and `}<a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/customization/theming/\"\n      }}>{`Materia Ui Theme`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { sizes, fonts, colors } from \"./theme\"\nimport { Button } from \"cloudhub-components\"\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <playground scope={{\n      Block,\n      Button,\n      Text\n    }}>\n  {`<Block row>\n    <Button contained color={colors.primary}> \n      <Text white>Click me</Text>\n    </Button> \n  </Block>`}\n    </playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}